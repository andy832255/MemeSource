// <auto-generated />
using System;
using MemeRepository.Db.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MemeSource.DAL.Migrations
{
    [DbContext(typeof(MemeRepositoryContext))]
    partial class MemeRepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MemeRepository.Db.Models.CATE", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("CREATED")
                        .HasColumnType("datetime");

                    b.Property<string>("NAME")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UPDATED")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.ToTable("CATE");
                });

            modelBuilder.Entity("MemeRepository.Db.Models.CATE_BINDING", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long?>("CATE_ID")
                        .HasColumnType("bigint");

                    b.Property<long?>("IMAGE_ID")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IS_BOUND")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("CATE_BINDING");
                });

            modelBuilder.Entity("MemeRepository.Db.Models.IMAGE", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("CREATED")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<byte[]>("DATA")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("NAME")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("SIZE")
                        .HasColumnType("int");

                    b.Property<string>("TYPE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UPDATED")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.ToTable("IMAGE");
                });

            modelBuilder.Entity("MemeRepository.Db.Models.TAG", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("CREATED")
                        .HasColumnType("datetime");

                    b.Property<string>("NAME")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("UPDATED")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.ToTable("TAG");
                });

            modelBuilder.Entity("MemeRepository.Db.Models.TAG_BINDING", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long?>("IMAGE_ID")
                        .HasColumnType("bigint");

                    b.Property<bool?>("IS_BOUND")
                        .HasColumnType("bit");

                    b.Property<long?>("TAG_ID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.ToTable("TAG_BINDING");
                });

            modelBuilder.Entity("MemeSource.Model.Models.SystemProperty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Parameter1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameter2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameter3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameter4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SP_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("SystemProperty");
                });
#pragma warning restore 612, 618
        }
    }
}
